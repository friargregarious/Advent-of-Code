###############################################################################
#                 ADVENT OF CODE | 2023 | PIPE MAZE | PART [A]                #
#                         adventofcode.com/2023/day/10                        #
# SOLVER: -------------------------------------------------- friargregarious #
# CONTACT: -------------------------------------- friar.gregarious@gmail.com #
# HOME: ------------------------------------------------------------- github #
# SOURCE: --------------------------------- ~/Advent-of-Code/AOC 2023/Day 10 #
# WRITTEN AND TESTED IN: -------------------------------------------- 3.11.6 #
###############################################################################
# IMPORTS #####################################################################
###############################################################################

import os
from my_utils import MyConfigParser as MyCfg
import math
from datetime import datetime
from termcolor import colored
import aocd

###############################################################################
# DECLARATIONS ################################################################
###############################################################################

__version__ = "0.0.0"
__example_answer__ = 4
__run_on_example__ = True

###############################################################################
# GATHER_TOOLS ################################################################
###############################################################################

def parse_input(source:str='input.txt') -> list:
	""" For parsing source string into usable content"""
	pass


###############################################################################
# SOLVE PART A ################################################################
###############################################################################

def solve_a(data):
	""" For solving PART a of day 10's puzzle."""
	pass


###############################################################################
# MAIN ENTRY POINT FOR SUBMITTING AND BENCHMARKING ############################
###############################################################################

def main(source):
	""" Main entry point"""
	solution = Solve_a(source)


###############################################################################
# RUNNING_FROM_HOME ###########################################################
###############################################################################

if __name__ == '__main__':
	my_utils.version_increment('a', sml=1)
	if __run_on_example__ :
		answer = main(parse('example.txt'), __example_answer__)
	else:
		answer = main(parse('input.txt'))
	my_utils.version_increment('a', sml=1)
	my_utils.solve_me(answer, 'a')
